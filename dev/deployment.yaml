apiVersion: v1
kind: ConfigMap
metadata:
  name: httpd-index
data:
  index.html: |
    <html>
    <head><title>Welcome</title></head>
    <body>
      <h1 style="text-align:center; color:blue;">
        Welcome to Kubernetes!!
      </h1>
      <p>
        On a high level, I am a DevOps Engineer with over 6 years of general IT experience.
        I have supported different government projects that use Agile development life cycles
        in their project management. I support application developers with deployments through
        both manual processes and automated CI/CD pipelines using tools like Ansible, Jenkins,
        GitHub, SonarQube, and Nexus.
      </p>
      <p>
        Through my expertise in Linux and AWS Cloud, I have used Terraform to provision
        infrastructure in AWS with reusable modules and templates. I have managed services such
        as VPCs, S3, EC2, Security Groups, CloudFront, and more. With Linux administration
        skills, I have installed, configured, and troubleshooted applications on Linux VMs.
      </p>
      <p>
        I also have experience in monitoring and logging using Prometheus, Grafana, and Graylog
        to ensure system reliability and performance. My ability to automate infrastructure,
        streamline deployments, and support developers has made me an essential part of
        DevOps-driven projects.
      </p>
      <p>
        With a strong foundation in Linux, cloud computing, and CI/CD pipelines, I continuously
        seek to optimize processes and enhance operational efficiency.
      </p>
      <p>
        I have been notified of the contract end date, which is why I am seeking new opportunities.
      </p>
    </body>
    </html>
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: httpd-deployment
  labels:
    app: httpd
spec:
  replicas: 2
  selector:
    matchLabels:
      app: httpd
  template:
    metadata:
      labels:
        app: httpd
    spec:
      containers:
      - name: httpd
        image: httpd:2.4
        ports:
        - containerPort: 80
        volumeMounts:
        - name: html
          mountPath: /usr/local/apache2/htdocs/
      volumes:
      - name: html
        configMap:
          name: httpd-index
---
apiVersion: v1
kind: Service
metadata:
  name: httpd-service
  labels:
    app: httpd
spec:
  type: NodePort   # Change to LoadBalancer if your cluster supports it
  selector:
    app: httpd
  ports:
  - port: 80
    targetPort: 80
    nodePort: 30080   # Optional, Kubernetes will auto-assign if omitted

